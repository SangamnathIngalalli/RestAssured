# AWS SQS Authentication Configuration
# 
# This configuration file is used by gimme-aws-creds to obtain temporary AWS credentials
# through Okta authentication. Place this file at ~/.okta_aws_login_config (Linux/Mac)
# or %USERPROFILE%\.okta_aws_login_config (Windows).
#
# ===== WHY AND WHEN TO USE [DEFAULT].ini =====
#
# PURPOSE:
# - Secure Authentication: Enables secure authentication to AWS through Okta, more secure
#   than storing long-term AWS credentials in code or environment.
# - Temporary Credentials: Obtains temporary AWS credentials that expire after a set duration,
#   reducing security risks.
# - Role-Based Access: Allows specifying which AWS role to assume, implementing the principle
#   of least privilege.
# - Automation: Provides a way to automate the credential retrieval process for tests.
#
# WHEN TO USE:
# - During Development: When developing and testing AWS-related functionality locally.
# - In CI/CD Pipelines: When authenticating to AWS in continuous integration processes.
# - For Team Standardization: To ensure all team members use the same authentication method.
# - When Security Policies Require It: If your organization requires Okta-based authentication.
#
# WORKFLOW IN THIS PROJECT:
# 1. Place this file at %USERPROFILE%\.okta_aws_login_config on Windows
# 2. Run gimme-aws-creds to:
#    - Authenticate with Okta
#    - Request temporary AWS credentials
#    - Store credentials in %USERPROFILE%\.aws\credentials
# 3. Test code in BaseSqsTest.java uses these credentials by:
#    - Reading AWS profile name from system property or using "default"
#    - Setting this profile as a system property
#    - Using ProfileCredentialsProvider to load these credentials
#
# BEST PRACTICES:
# - Don't commit sensitive information to version control
# - Use environment-specific profiles for different environments
# - Regularly rotate Okta credentials
# - Specify AWS profile in tests: mvn test -Daws.profile=your-profile-name
#
# Parameters:
# - okta_org_url: Your Okta organization URL
# - okta_auth_server: The authorization server to use (default is fine for most cases)
# - okta_username: Your Okta username/email
# - app_url: The URL of the AWS application in Okta
# - aws_rolename: The AWS role to assume
# - aws_default_duration: Session duration in seconds (3600 = 1 hour)
# - prefer_token_type: The type of token to use for authentication

[DEFAULT]
okta_org_url = https://your-company.okta.com
okta_auth_server = default
okta_username = your.email@company.com
app_url = https://your-company.okta.com/home/amazon_aws/0oa1234567890abcdef/123
aws_rolename = YourRole
aws_default_duration = 3600
prefer_token_type = app_token
